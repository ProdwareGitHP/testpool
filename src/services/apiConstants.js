export const apiConstant = {
  login: "auth/login",
  refreshToken: "auth/token/refresh",
  getUserQRCode: "auth/qrcode",

  getTeamList: "teams/teamsData/list",
  getRequestList: "teams/get/request/list",
  getRequestTypeList: "teams/get/request/types/list",
  getResionList: "teams/get/request/reasons/list",
  createRequestData: "teams/create/request",
  getSourceRoaster: "teams/get/sourceRoster",
  getDestinationRoster: "teams/get/destinationRoster",
  getRequestDetails: "teams/get/request/details",
  approveHistoryDetails: "teams/get/approval/history",
  dashboardList: "timesubmission/payroll/dashboard/data",
  payrollTtimehseetById: "timesubmission/get/employee/payroll/timehseet/data",
  getDepartments: "timesubmission/get/all/departments",
  // getPayCodes: "timesubmission/get/all/paycodes",
  allTimesheetMaster: "timesubmission/get/all/timesheet/master/data",
  // getJobs: "timesubmission/get/all/jobs",
  submitPersonTimesheet: "timesubmission/submit/person/timesheet",
  savePersonTimesheet: "timesubmission/save/person/payroll/timesheet/data",
  deletePersonTimesheet: "timesubmission/delete/person/payroll/timesheet/data",

  getprofileist: "roster/profile/list",
  getallRoasterProfileData: "roster/profile/list/300000006565312",
  getallRoasterEmpDetailTableData: "roster/personRosterData",
  getWorkDurationData: "roster/workDuration",
  getAddStaffData: "roster/searchStaff/list",
  getOnCallLovList: "roster/onCallLov/list",
  getEmergencyList: "roster/emergencyLov/list",
  postOption: "roster/assignSpotRosterOption1",
  postOption2: "roster/assignSpotRosterOption2",
  getDepartMentList: "roster/department/list/300000006565312/3038",
  getJobTitleList: "roster/jobTitle/list/3038",
  getDutyManagerList: "roster/dutyManager/list",
  DeleteRoster: "roster/personRosterData",
  getUpdateSingleShift: "roster/personRosterData",
  saveRosterProfile: "roster/personRosterData/update",
  getDemandTemplats: "roster/demandTemplates",
  getDemandId: "roster/demandTemplates",
  getEmployeeSuggestions: "roster/demandTemplates/employeeSuggestions",
  createEmployeeSuggestions:
    "roster/demandTemplates/employeeSuggestions/createRoster",
  getworkRotation: "roster/rota/workRotationPlan",
  getWorkRotationDet: "roster/rota/workRotationPlanDetails",
  generateRotaShifts: "roster/rota/generateRotaShifts",
  createFlexRota: "roster/rota/createFlexRota",
  personRosterDataWithDate: "roster/personRosterDataWithDate",
  validateRoster: "roster/demandTemplates/validate/validateRoster",
  getallProfileData: "roster/profile/list",
  getDepartMentData: "roster/department/list",
  getJobTitleData: "roster/jobTitle/list/department",
  getWorkLocationData: "roster/workLocation/list",
  sendForApproval: "roster/send/rosterApproval",
  sendForRmiRequest: "roster/send/rosterRequiredAction",
  getRosterSinglePersonData: "roster/getSinglePersonData",
  getPersonRosterdata: "roster/copyPersonRosterData",
  getSummaryData: "rosters-setting/v1/manage-work-duration/get/work-duration",
  createWorkDuration:
    "rosters-setting/v1/manage-work-duration/create/work-duration",
  updateWorkDuration:
    "rosters-setting/v1/manage-work-duration/update/work-duration",
  getWorkDurationCategory:
    "rosters-setting/v1/manage-work-duration/get/catagories",
  getBussinessUnitData:
    "rosters-setting/v1/manage-work-duration/get/business-units",
  getLegalEntityData:
    "rosters-setting/v1/manage-work-duration/get/legal-entities",
  getDepartmentLov: "rosters-setting/v1/manage-work-duration/get/departments",
  getDetailData: "rosters-setting/v1/manage-work-duration/get/details",
  DeleteWorkDurationData: "rosters-setting/v1/manage-work-duration/delete",
  getCriteriaDetail: "rosters-setting/v1/manage-work-duration/get/criteria",

  getWorkPlanDetail: "rosters-setting/v1/manage-work-plans/get",
  postWorkPlan: "rosters-setting/v1/manage-work-plans/create",
  updateWorkPlan: "rosters-setting/v1/manage-work-plans/update",
  deleteWorkPlanDetail: "rosters-setting/v1/manage-work-plans/delete",

  getWorkRotationData: "rosters-setting/v1/workrotation/get",
  getWorkRotationDataById: "rosters-setting/v1/workrotation/get",
  createWorkRotationData: "rosters-setting/v1/workrotation/create",
  updateWorkRotationData: "rosters-setting/v1/workrotation/update",
  deleteWorkRotationData: "rosters-setting/v1/workrotation/delete",
  expiryDateDate: "rosters-setting/v1/workrotation/updateExpiry",

  getSplitShiftTableData: "rosters-setting/v1/splitShift/get",
  getSplitShiftTableDatabyId: "rosters-setting/v1/splitShift/get",
  getSplitShiftSelectData: "rosters-setting/v1/splitShift/selectShift/get",
  getSplitSelectData: "rosters-setting/v1/splitShift/selectShift/get",
  createSplitShiftData: "rosters-setting/v1/splitShift/create",
  UpdateSplitShiftData: "rosters-setting/v1/splitShift/update",
  deleteSplitShiftData: "rosters-setting/v1/splitShift/delete",

  getDemandTempData: "rosters-setting/v1/demandTemplate/get/by/profileId",
  getDemandTempDataById: "rosters-setting/v1/demandTemplate/get",
  createDemandTempData: "rosters-setting/v1/demandTemplate/create",
  updateDemandTempData: "rosters-setting/v1/demandTemplate/update",
  getDemandTempDetail: "rosters-setting/v1/demandTemplate/get",
  getSkillData: "rosters-setting/v1/demandTemplate/skills",
  getCitizenShipData: "rosters-setting/v1/demandTemplate/citizenships",
  getEmployeeTypes: "rosters-setting/v1/demandTemplate/employeeTypes",
  getDemandTemplateProfiles: "rosters-setting/v1/demandTemplate/profiles",
  createSelfRoster: "roster/selfRoster/createSelfRoster",
  getSelfRosters: "roster/selfRoster/details",
  getSelfRostersApprovalHistory: "roster/selfRoster/approvalHistory",
  getSelfRostersWorkDuration: "roster/selfRoster/workDurations",
  getSelfRostersWeeklyWorkDuration: "roster/selfRoster/weeklyWorkDuration",
  getSelfRosterWorkDurationByPersonId: "roster/selfRoster/workDurations",
  getManageTeamTableData: "manage/teams/get/all",
  getManageTeamTableDataById: "manage/teams/get/details/by/teamId",
  getMangeTeamOpenFromValueList: "manage/teams/openFromValueList",
  createTeam: "manage/teams/create",
  manageTeamMemberTableData: "manage/teams/get/manageTeamMembers",
  createTeamMember: "manage/teams/manageTeamMembers/create",
  updateTeam: "manage/teams/update",
  deleteTeam: "manage/teams/delete/team/by/id",

  getMonthdata: "dashboard/get/pay/periods",
  getChartdata: "dashboard/get",
  getEmployeeDetail: "dashboard/get/EmployeeDetail/Data",
  productivityData: "dashboard/project/employee/productivity/data",

  getTimeZoneData: "selfservice/userpreference/get/timeZone",
  saveReminderData: "selfservice/userpreference/save",
  createVactionRule: "selfservice/vacationRules/create",
  updateVacationRule: "selfservice/vacationRules/update",
  taskData: "selfservice/vacationRules/get/task",
  userData: "selfservice/vacationRules/user/get",
  vacationRule: "selfservice/vacationRules/get",
  searchUser: "selfservice/vacationRules/user/get/search",
  getUserData: "selfservice/vacationRules/get/user/details",
  userDataPage: "selfservice/vacationRules/get/user/details",

  payrollAudit: "payrollAudit/payroll/audit/data",
  submitPayrollAudit: "payrollAudit/submit/pay/audit/data",
  lineData: "payrollAudit/get/linedata",
  history: "payrollAudit/approval/history/data",
  viewSave: "payrollAudit/save/payroll/audit/data",
  submitReadyForPayroll: "payrollAudit/action/pay/audit/data",
  exportData: "payrollAudit/download/csv/audit/payroll/data",

  taskGroupDetails: "manage/access/role/get/taskGroup/details",
  saveUserRole: "manage/access/role/save/userRole/Details",
  deleteRole: "manage/access/role/delete",
  saveUserRole: "manage/access/role/api/save/userRole/Details",
  updateUserRole: "manage/access/role/api/update/userRole/details",
  deleteRole: "manage/access/role/api/delete",
  manageAccessRoleGet: "manage/access/role/api/get/manage/role/details",
  taskGroupGet: "manage/access/role/api/get/tasksName",
  taskDetails: "manage/access/role/api/get/taskGroup/details",
  getUserControlTask: "manage/access/role/api/get/user/control",
  userList: "manage/access/role/api/get/fullName",
  saveUserControl: "manage/access/role/api/update/user/access",
  dynamicMenu: "manage/access/role/api/get/tasks",

  getScheduleProfileData:
    "manage/scheduler/profile/api/get/user/profile/details",
  getScheduleEmpData: "manage/scheduler/profile/api/get/employee/list/details",
  getScheduleUserData: "manage/scheduler/profile/api/get/user/details",
  getProfileCriteria:
    "manage/scheduler/profile/api/get/employee/profile/criteria",
  getProfileCriteriaById: "manage/scheduler/profile/api/get/profile/criteria",
  getScheduleJobTitle: "manage/scheduler/profile/api/get/job/details",
  getScheduleJobFamily: "manage/scheduler/profile/api/get/job/family",
  getEmployeeCatogery: "manage/scheduler/profile/api/get/employee/catogery",
  getDepartmentDetail: "manage/scheduler/profile/api/get/department",
  getSubDepartmentDetail: "manage/scheduler/profile/api/get/sub/department",
  getPayrollDetails: "manage/scheduler/profile/api/get/payroll/name",
  getReligionDetails: "manage/scheduler/profile/api/get/lookup/code",
  saveManageSchedulerProfile: "manage/scheduler/profile/api/save/profile",
  updateManageSchedulerProfile: "manage/scheduler/profile/api/update/profile",
  deleteManageSchedulerProfile: "manage/scheduler/profile/api/delete/profile",
  getTimeSheetApproval: "timesubmission/get/all/awaitingTimesheet",
  getTimeSheetBulkApproval: "timesubmission/get/all/bulk/approval/table",
  getTimeSheetWeekApproval: "timesubmission/get/all/bulk/approval/weeks",
  getTimeSheetPayrollApproval:
    "timesubmission/get/timesheet/payroll/dataByPersonId",
  getMyTeams: "teams/get/myTeams",
  getPublishedRosters: "roster/get/all/published/rosters",
  getPublishedRosterPopup: "roster/get/all/published/rosters/data",
  getPublishedRosterByMe: "roster/get/all/published/rosters/forMe",
  getJobFamilyData: "manage/scheduler/profile/api/get/job/family",
  saveWebCheckIn: "admin/punch/savePersonPunches",
  getTimeCardData: "timesubmission/get/timeCard/Data",
  getTimeCardSummary: "timesubmission/get/timeCard/Summary",
  getTimeSheetReport: "dashboard/get/report/timesheet",
  employeeTimeSheetReport: "dashboard/get/report/employeeTimesheet",
  requestStatus: "dashboard/get/report/requestStatus",
  getAllNotification: "teams/get/notifications/list",
  getActionableNotification: "teams/get/notifications/actionable",
  getInfoOnlyNotification: "teams/get/notifications/infoOnly",
  getClosedNotification: "teams/get/notifications/closed",
  getNotificationPopup: "teams/get/permissionRequest/popupDetails",
  getNotificationApproval: "teams/get/permissionRequest/approvalHistory",
  getNotificationSelfRosterApproval: "teams/get/selfRoster/approvalHistory",
  postNotificationSelfRosterApproval: "teams/get/selfRoster/popupDetails",
  postNotificationActions: "teams/notifications/action",
  getAllPunches: "admin/punch/personPunches",
  getTimeCardPunchDetail: "timesubmission/get/timeCard/PunchDetails",
};
